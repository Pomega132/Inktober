@using System.Text
@using Webtober2025.Client.Models._01

<div class="d-flex justify-center relative" style="height:50vh;">
    <img class="absolute" src="/Images/2025/01/Tete.png" style="height:50vh;" />
    <img class="absolute" src="/Images/2025/01/@(_Personnage.Moustache.ToString("000")).png" style="@GetMoustacheStyle()" />
</div>
<MudPaper Class="pa-5">
    <MudSlider @bind-Value="_Personnage.Moustache" Min="0" Max="29" Color="Color.Primary">Moustache</MudSlider>
    <MudSlider @bind-Value="_Personnage.Hue" Min="0" Max="180" Color="Color.Primary">Couleur</MudSlider>
    <MudSlider @bind-Value="_Personnage.Saturation" Min="0" Max="1" Step="0.02" Color="Color.Primary">Saturation</MudSlider>
    <MudSlider @bind-Value="_Personnage.Lightness" Min="0" Max="1" Step="0.02" Color="Color.Primary">Luminosité</MudSlider>
    <div class="d-flex justify-center">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Valider">Valider</MudButton>
    </div>
</MudPaper>

@code {
    [Parameter]
    public HubConnection? HubConnection { get; set; }

    private Personnage _Personnage { get; set; } = new Personnage();

    private string GetMoustacheStyle()
    {
        CultureInfo.CurrentCulture = CultureInfo.InvariantCulture;

        StringBuilder builder = new StringBuilder();
        builder.Append("height: 50vh;");
        builder.Append($"filter: hue-rotate({_Personnage.Hue}deg) saturate({_Personnage.Saturation}) brightness({_Personnage.Lightness * 5});");

        return builder.ToString();
    }

    private async Task Valider()
    {
        if (HubConnection is not null)
        {
            await HubConnection.SendAsync(nameof(GameHub.SetPersonnage), JsonConvert.SerializeObject(_Personnage));
        }
    }
}
